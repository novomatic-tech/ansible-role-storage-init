---
- name: Scan SCSI for new device and update existing device
  command: /usr/bin/scsi-rescan -s -u
  register: scsi_rescan
  changed_when: ('0 new or changed' not in scsi_rescan.stdout ) or
                ('0 remapped or resized' not in scsi_rescan.stdout)
  when: ansible_distribution == 'RedHat'

- name: Scan SCSI for new device and update existing device
  command: /usr/bin/rescan-scsi-bus.sh -s -u
  register: scsi_rescan
  changed_when: ('0 new or changed' not in scsi_rescan.stdout ) or
                ('0 remapped or resized' not in scsi_rescan.stdout)
  when: ansible_distribution == 'Ubuntu'

- name: Extend pvsize
  command: pvresize {{ item.1 }}
  register: pvresize_status
  failed_when: 'pvresize_status.rc != 0 and "Failed to find" not in pvresize_status.stderr '
  changed_when: 'pvresize_status.rc == 0 and "1 physical volume(s) resized or updated" in pvresize_status.stdout '
  loop: "{{ lvm_vgs|subelements('disks') }}"

- name: Create lvm volume group
  lvg:
    vg: "{{ item.name }}"
    pvs: "{{ item.disks | join(',') }}"
  loop: "{{ lvm_vgs }}"

- name: Create folders
  file:
    path: "{{ item.path }}"
    recurse: yes
    state: directory
  with_items: "{{ lvm_volumes }}"

- name: Create volume
  lvol:
    vg: "{{ item.vg }}"
    lv: "{{ item.name }}"
    size: "{{ item.size }}"
  with_items: "{{ lvm_volumes }}"

- name: Set filesystem per logical volume
  filesystem:
    fstype: "{{ item.fstype | default(default_fs_type) }}"
    dev: "/dev/mapper/{{ item.vg | replace('-','--') }}-{{ item.name }}"
    opts: "{{ item.opts | default(default_vg_opts) | default(omit) }}"
    force: no
    resizefs: no
  with_items: "{{ lvm_volumes }}"

- name: Update mountpoints
  mount:
    path: "{{ item.path }}"
    src: "/dev/mapper/{{ item.vg | replace('-','--') }}-{{ item.name }}"
    fstype: "{{ item.fstype | default(default_fs_type) }}"
    state: mounted
  with_items: "{{ lvm_volumes }}"

- name: Grow filesystem per logical volume
  filesystem:
    fstype: "{{ item.fstype | default(default_fs_type) }}"
    dev: "/dev/mapper/{{ item.vg | replace('-','--') }}-{{ item.name }}"
    opts: "{{ item.opts | default(default_vg_opts) | default(omit) }}"
    force: no
    resizefs: yes
  with_items: "{{ lvm_volumes }}"
